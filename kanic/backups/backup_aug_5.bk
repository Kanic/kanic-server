--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE auth_group (
    id integer NOT NULL,
    name character varying(80) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO django;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_group_id_seq OWNER TO django;

--
-- Name: auth_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE auth_group_id_seq OWNED BY auth_group.id;


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE auth_group_permissions (
    id integer NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO django;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_group_permissions_id_seq OWNER TO django;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE auth_group_permissions_id_seq OWNED BY auth_group_permissions.id;


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO django;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_permission_id_seq OWNER TO django;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE auth_permission_id_seq OWNED BY auth_permission.id;


--
-- Name: beta_betamechanic; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE beta_betamechanic (
    id integer NOT NULL,
    first_name character varying(255) NOT NULL,
    last_name character varying(255) NOT NULL,
    email character varying(255) NOT NULL,
    phone character varying(20),
    is_certified boolean NOT NULL,
    certification character varying(40),
    work_type character varying(40) NOT NULL,
    "createAt" timestamp with time zone NOT NULL
);


ALTER TABLE public.beta_betamechanic OWNER TO django;

--
-- Name: beta_betamechanic_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE beta_betamechanic_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.beta_betamechanic_id_seq OWNER TO django;

--
-- Name: beta_betamechanic_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE beta_betamechanic_id_seq OWNED BY beta_betamechanic.id;


--
-- Name: beta_hiringjob; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE beta_hiringjob (
    id integer NOT NULL,
    title character varying(255) NOT NULL,
    resume character varying(100) NOT NULL,
    "createAt" timestamp with time zone NOT NULL
);


ALTER TABLE public.beta_hiringjob OWNER TO django;

--
-- Name: beta_hiringjob_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE beta_hiringjob_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.beta_hiringjob_id_seq OWNER TO django;

--
-- Name: beta_hiringjob_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE beta_hiringjob_id_seq OWNED BY beta_hiringjob.id;


--
-- Name: beta_newsletter; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE beta_newsletter (
    id integer NOT NULL,
    email character varying(255) NOT NULL
);


ALTER TABLE public.beta_newsletter OWNER TO django;

--
-- Name: beta_newsletter_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE beta_newsletter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.beta_newsletter_id_seq OWNER TO django;

--
-- Name: beta_newsletter_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE beta_newsletter_id_seq OWNED BY beta_newsletter.id;


--
-- Name: beta_tester; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE beta_tester (
    id integer NOT NULL,
    name character varying(40),
    email character varying(255) NOT NULL,
    phone character varying(20),
    "zipCode" character varying(7) NOT NULL,
    car boolean NOT NULL,
    "createAt" timestamp with time zone NOT NULL,
    first_name character varying(255) NOT NULL,
    last_name character varying(255) NOT NULL
);


ALTER TABLE public.beta_tester OWNER TO django;

--
-- Name: beta_tester_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE beta_tester_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.beta_tester_id_seq OWNER TO django;

--
-- Name: beta_tester_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE beta_tester_id_seq OWNED BY beta_tester.id;


--
-- Name: cars_make; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE cars_make (
    id integer NOT NULL,
    name character varying(20) NOT NULL,
    "niceName" character varying(20) NOT NULL
);


ALTER TABLE public.cars_make OWNER TO django;

--
-- Name: cars_make_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE cars_make_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cars_make_id_seq OWNER TO django;

--
-- Name: cars_make_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE cars_make_id_seq OWNED BY cars_make.id;


--
-- Name: cars_model; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE cars_model (
    id integer NOT NULL,
    name character varying(40) NOT NULL,
    "niceName" character varying(40) NOT NULL,
    years integer NOT NULL,
    make_id integer NOT NULL
);


ALTER TABLE public.cars_model OWNER TO django;

--
-- Name: cars_model_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE cars_model_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cars_model_id_seq OWNER TO django;

--
-- Name: cars_model_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE cars_model_id_seq OWNED BY cars_model.id;


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO django;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_admin_log_id_seq OWNER TO django;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE django_admin_log_id_seq OWNED BY django_admin_log.id;


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO django;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_content_type_id_seq OWNER TO django;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE django_content_type_id_seq OWNED BY django_content_type.id;


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE django_migrations (
    id integer NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO django;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_migrations_id_seq OWNER TO django;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE django_migrations_id_seq OWNED BY django_migrations.id;


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO django;

--
-- Name: django_site; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE django_site (
    id integer NOT NULL,
    domain character varying(100) NOT NULL,
    name character varying(50) NOT NULL
);


ALTER TABLE public.django_site OWNER TO django;

--
-- Name: django_site_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE django_site_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_site_id_seq OWNER TO django;

--
-- Name: django_site_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE django_site_id_seq OWNED BY django_site.id;


--
-- Name: users_user; Type: TABLE; Schema: public; Owner: django; Tablespace: 
--

CREATE TABLE users_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    username character varying(255),
    email character varying(255) NOT NULL,
    first_name character varying(30),
    last_name character varying(30),
    is_mechanic boolean NOT NULL,
    is_active boolean NOT NULL,
    is_admin boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    phone character varying(20) NOT NULL
);


ALTER TABLE public.users_user OWNER TO django;

--
-- Name: users_user_id_seq; Type: SEQUENCE; Schema: public; Owner: django
--

CREATE SEQUENCE users_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_user_id_seq OWNER TO django;

--
-- Name: users_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: django
--

ALTER SEQUENCE users_user_id_seq OWNED BY users_user.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY auth_group ALTER COLUMN id SET DEFAULT nextval('auth_group_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY auth_group_permissions ALTER COLUMN id SET DEFAULT nextval('auth_group_permissions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY auth_permission ALTER COLUMN id SET DEFAULT nextval('auth_permission_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY beta_betamechanic ALTER COLUMN id SET DEFAULT nextval('beta_betamechanic_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY beta_hiringjob ALTER COLUMN id SET DEFAULT nextval('beta_hiringjob_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY beta_newsletter ALTER COLUMN id SET DEFAULT nextval('beta_newsletter_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY beta_tester ALTER COLUMN id SET DEFAULT nextval('beta_tester_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY cars_make ALTER COLUMN id SET DEFAULT nextval('cars_make_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY cars_model ALTER COLUMN id SET DEFAULT nextval('cars_model_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY django_admin_log ALTER COLUMN id SET DEFAULT nextval('django_admin_log_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY django_content_type ALTER COLUMN id SET DEFAULT nextval('django_content_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY django_migrations ALTER COLUMN id SET DEFAULT nextval('django_migrations_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY django_site ALTER COLUMN id SET DEFAULT nextval('django_site_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: django
--

ALTER TABLE ONLY users_user ALTER COLUMN id SET DEFAULT nextval('users_user_id_seq'::regclass);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: django
--

COPY auth_group (id, name) FROM stdin;
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('auth_group_id_seq', 1, false);


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: django
--

COPY auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('auth_group_permissions_id_seq', 1, false);


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: django
--

COPY auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can add permission	2	add_permission
5	Can change permission	2	change_permission
6	Can delete permission	2	delete_permission
7	Can add group	3	add_group
8	Can change group	3	change_group
9	Can delete group	3	delete_group
10	Can add content type	4	add_contenttype
11	Can change content type	4	change_contenttype
12	Can delete content type	4	delete_contenttype
13	Can add session	5	add_session
14	Can change session	5	change_session
15	Can delete session	5	delete_session
16	Can add site	6	add_site
17	Can change site	6	change_site
18	Can delete site	6	delete_site
19	Can add user	7	add_user
20	Can change user	7	change_user
21	Can delete user	7	delete_user
22	Can add mechanic	8	add_mechanic
23	Can change mechanic	8	change_mechanic
24	Can delete mechanic	8	delete_mechanic
25	Can add service	9	add_service
26	Can change service	9	change_service
27	Can delete service	9	delete_service
28	Can add request	10	add_request
29	Can change request	10	change_request
30	Can delete request	10	delete_request
31	Can add tester	11	add_tester
32	Can change tester	11	change_tester
33	Can delete tester	11	delete_tester
34	Can add make	12	add_make
35	Can change make	12	change_make
36	Can delete make	12	delete_make
37	Can add model	13	add_model
38	Can change model	13	change_model
39	Can delete model	13	delete_model
40	Can add beta mechanic	14	add_betamechanic
41	Can change beta mechanic	14	change_betamechanic
42	Can delete beta mechanic	14	delete_betamechanic
43	Can add newsletter	15	add_newsletter
44	Can change newsletter	15	change_newsletter
45	Can delete newsletter	15	delete_newsletter
46	Can add hiring job	16	add_hiringjob
47	Can change hiring job	16	change_hiringjob
48	Can delete hiring job	16	delete_hiringjob
\.


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('auth_permission_id_seq', 48, true);


--
-- Data for Name: beta_betamechanic; Type: TABLE DATA; Schema: public; Owner: django
--

COPY beta_betamechanic (id, first_name, last_name, email, phone, is_certified, certification, work_type, "createAt") FROM stdin;
1	dong	liang	dongliang3571@gmail.com	3476525237	t	dong liang	FT	2016-08-03 18:25:55.633855-04
\.


--
-- Name: beta_betamechanic_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('beta_betamechanic_id_seq', 1, true);


--
-- Data for Name: beta_hiringjob; Type: TABLE DATA; Schema: public; Owner: django
--

COPY beta_hiringjob (id, title, resume, "createAt") FROM stdin;
\.


--
-- Name: beta_hiringjob_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('beta_hiringjob_id_seq', 1, false);


--
-- Data for Name: beta_newsletter; Type: TABLE DATA; Schema: public; Owner: django
--

COPY beta_newsletter (id, email) FROM stdin;
\.


--
-- Name: beta_newsletter_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('beta_newsletter_id_seq', 1, false);


--
-- Data for Name: beta_tester; Type: TABLE DATA; Schema: public; Owner: django
--

COPY beta_tester (id, name, email, phone, "zipCode", car, "createAt", first_name, last_name) FROM stdin;
4	Ayoub Maouhoub	ayoub.maouhoub@live.com	6467642010	11372	t	2016-06-14 23:29:49.260605-04	ahmed	bens
5	Rana Hassan	rahass93@gmail.com	3472483354	10306	t	2016-06-16 21:04:23.223061-04	ahmed	bens
6	Dong Liang	dongliang3571@gmail.com	3476525237	11373	t	2016-06-17 11:46:43.220663-04	ahmed	bens
7	Alexey Niyakin	alexeynewyork@gmail.com	3472578189	10037	t	2016-06-21 14:34:33.437783-04	ahmed	bens
9	Amelia Irizarry Voorsanger 	avoorsanger@gmail.com	9172803079	10028	t	2016-05-08 19:28:13.362778-04	ahmed	bens
10	Mario Joya	mariojoya96@gmail.com	7184926634	11220	t	2016-05-09 11:39:16.822465-04	ahmed	bens
11	lestiel	lestiel22@hotmail.com	3477342925	10705	t	2016-05-09 12:06:24.766511-04	ahmed	bens
12	Wahid Jalil	wjalil001@gmail.com	00000000	11105	t	2016-05-09 12:14:21.939993-04	ahmed	bens
15	Gareth Williams	gawilliams@ccny.cuny.edu	2126505421	10031	t	2016-05-09 12:31:54.937109-04	ahmed	bens
17	George Basaly	menageorge.basaly@macaulay.cuny.edu	631-839-2552	11747	t	2016-05-09 12:37:40.948774-04	ahmed	bens
19	silvio cifuentes	scifuen000@citymail.cuny.edu	6467032267	11415	t	2016-05-09 12:46:34.80196-04	ahmed	bens
21	Jordan	jordandiatlo@gmail.com	7322077572	10032	t	2016-05-09 13:07:36.168079-04	ahmed	bens
22	Pat	pllanera@nyc.rr.com	728-268-6370	11375	t	2016-05-09 13:42:40.032016-04	ahmed	bens
24	Romana Vukaj	romanavukaj@gmail.com	3478183878	10704	t	2016-05-10 00:25:53.472635-04	ahmed	bens
25	Atdhe Rama	atdhe_rama@hotmail.com	6465818768	10704	t	2016-05-10 00:27:22.263327-04	ahmed	bens
26	Michael Daiowraj	mike121395@gmail.com	3473513521	11420	t	2016-05-10 01:37:54.20643-04	ahmed	bens
27	Kingsley obi	koojnr@gmail.com	9176280092	10035	t	2016-05-10 16:57:09.634799-04	ahmed	bens
28	Craig Cobb	vocalvictory@outlook.com	(917) 826-7246	11213	t	2016-05-12 10:37:08.391729-04	ahmed	bens
29	akil fletcher	akil.fle@gmail.com	347-706-5225	11203	t	2016-05-12 10:38:26.495429-04	ahmed	bens
30	Robert Santana	robsantana92@gmail.com	7186648126	10460	t	2016-05-12 14:40:43.612968-04	ahmed	bens
32	David castillo	vvf58@hotmail.com	9176574405	11221	t	2016-06-12 12:57:29.559432-04	ahmed	bens
33	Tiffany	t_nthn@yahoo.com	6319655116	11419	t	2016-06-12 14:08:46.052278-04	ahmed	bens
34	Jose Jimenez	jrj8219@gmail.com	3473274166	11377	t	2016-06-21 14:34:42.726667-04	ahmed	bens
35	Anastasia Golodova	pinkbelk@gmail.com	3472578146	10037	t	2016-06-21 14:35:18.631049-04	ahmed	bens
37	Ahsin Shabbir	ashabbi00@gmail.com	3474357209	11228	t	2016-06-21 17:44:16.211563-04	ahmed	bens
38	Navindra Kewal	navindrakewal@gmail.com	9179226081	11418	t	2016-06-21 17:46:15.269087-04	ahmed	bens
40	Adil Majid	adil.majid88@gmail.com	9292406831	11377	t	2016-06-23 03:46:08.862183-04	ahmed	bens
42	Robert Santana	robsantana@gmail.com	7186648126	10460	t	2016-06-23 13:29:19.30895-04	ahmed	bens
46	Mohamed Aboseria	aboseria7@gmail.com	7182499413	11220	t	2016-06-23 13:34:11.13407-04	ahmed	bens
49	Radon chic Mirza	mirzaradoncic@gmail.com	7185097656	11375	t	2016-06-23 13:40:08.146394-04	ahmed	bens
53	Jeffrey xu	jeffx210@gmail.con	3472091977	10304	t	2016-06-23 13:52:42.72993-04	ahmed	bens
54	Showmik Podder	showmikpodder@gmail.com	6466756072	11423	t	2016-06-23 13:53:21.740695-04	ahmed	bens
55	Ankur Jadhav	ankurjadhav46@gmail.com	6463714596	10034	t	2016-06-23 13:54:28.596143-04	ahmed	bens
56	M abdelghani	mabdelghani204@gmail.com	01226657610	11368	t	2016-06-23 14:16:31.911-04	ahmed	bens
57	Farida Maklad 	faridamaklad@gmail.com	917-794-5699	10314	t	2016-06-23 14:18:05.532027-04	ahmed	bens
58	Akash Patel	akashp992391@gmail.com	9142994699	10704	t	2016-06-23 14:30:36.182168-04	ahmed	bens
59	Reginald Williams	I3aatman@yahoo.com	6462212807	10466	t	2016-06-23 14:38:06.0086-04	ahmed	bens
60	Mariah St Juste	harrismariah18@gmail.com	9727467303	11213	t	2016-06-24 14:09:57.527471-04	ahmed	bens
61	Deion Daniels	deiondaniels35@yahoo.com	3473677765	10458	t	2016-06-24 14:10:36.709035-04	ahmed	bens
62	Paul opoku	paulopoku.97@gmail.com	6466233114	10451	t	2016-06-24 14:11:33.630302-04	ahmed	bens
63	Zoya	zoyapeters123@gmail.com	9293409225	11213	t	2016-06-24 14:12:35.808683-04	ahmed	bens
64	Tanya Jones	JonesTanya1124@gmail.com	3473443938	10459	t	2016-06-24 14:13:14.743789-04	ahmed	bens
65	Onife Jamieson	onifeg21@gmail.com	9145103006	10466	t	2016-06-24 14:14:15.506241-04	ahmed	bens
66	Neelam Prashad	prashad.neelam@gmail.com	9176515788	11419	t	2016-06-24 14:16:24.738487-04	ahmed	bens
67	Marvin Betances	Marvin.mb102@gmail.com	6466269657	10453	t	2016-06-24 14:18:37.398258-04	ahmed	bens
68	Sharlyne Cabral	sharlynec@gmail.con	3479717270	10452	t	2016-06-24 14:19:18.682995-04	ahmed	bens
69	Yohelina maria	yoheliname@gmail.com	9174998544	10456	t	2016-06-24 14:20:18.602071-04	ahmed	bens
70	Alexis Saunders	luckylexi75@gmail.com	3472134485	10031	t	2016-06-24 14:22:28.242015-04	ahmed	bens
71	Bassey Ndemenoh	ndemenoh@yahoo.com	3477328009	10035	t	2016-06-24 14:32:24.302476-04	ahmed	bens
72	Joel Rodriguez	jrodriguez4@ccny.cuny.edu	3473559098	10458	t	2016-06-24 14:38:43.498254-04	ahmed	bens
73	weifan lin	tjc.stefanlin@gmail.com	2222222222	10301	t	2016-06-25 14:31:12.041568-04	ahmed	bens
74	Mu Kun Wu	starynana@hotmail.com	7188774988	11355	t	2016-06-25 19:21:09.608028-04	ahmed	bens
75	Jason ma	azncenanwannab@hotmail.com		10552	f	2016-06-25 19:27:35.684047-04	ahmed	bens
76	Little Hippo	TJC.stefanlin@gmail.com		11204	f	2016-06-25 19:42:38.830485-04	ahmed	bens
77	Diana Yau	snoopychoco77@gmail.com		11357	f	2016-06-25 20:09:15.335945-04	ahmed	bens
78	Carl Colena	carl.colena@gmail.com		11580	f	2016-06-25 20:17:39.44213-04	ahmed	bens
79	Bin Wang	wbin302@gmail.com	9175201175	11373	t	2016-06-25 20:35:30.142377-04	ahmed	bens
80	superman was here	supermanhere@gmail.com		11223	t	2016-06-25 20:47:07.394204-04	ahmed	bens
81	hallo you	halloyou@yahoo.com		11362	t	2016-06-25 20:47:25.660502-04	ahmed	bens
82	henry chen	1zombie.dies@gmail.com		11223	f	2016-06-25 21:13:27.808565-04	ahmed	bens
83	test	bchen0616@gmail.com		11219	f	2016-06-25 21:13:48.540333-04	ahmed	bens
84	faisal farooq	chaudhary.fsl@gmail.com	3479856605	11432	t	2016-06-25 21:16:21.459196-04	ahmed	bens
85	satya gupta	satya823@hotmail.com		11355	f	2016-06-25 21:17:26.856372-04	ahmed	bens
86	alex	rnrtjd520@hotmail.com		11358	t	2016-06-25 21:23:05.165822-04	ahmed	bens
13	Robin Li	robin.echizen@yahoo.com	00000000	11762	f	2016-05-09 12:16:14-04	ahmed	bens
14	Adriam Perez	apceballos1960@gmail.com	6462460103	10472	f	2016-05-09 12:16:28-04	ahmed	bens
16	marie nazon	mnazon5@gmail.com	9172166972	10027	f	2016-05-09 12:36:55-04	ahmed	bens
18	renjie yin	yinrj02@gmail.com	3473485147	11367	f	2016-05-09 12:39:40-04	ahmed	bens
20	Sebastian Villarrubia	sebastianvillarrubia@gmail.com	34736713689	11104	f	2016-05-09 12:53:36-04	ahmed	bens
23	Amali	amali.eddine@gmail.com	3477261731	10020	f	2016-05-09 21:39:16-04	ahmed	bens
31	Jackson Gable	jacksonredgable@gmail.com	(405) 808-1235	10027	f	2016-06-07 14:12:44-04	ahmed	bens
3	Ameera	ameeraameer94@yahoo.com	6466174600	11379	f	2016-06-13 18:13:49-04	ahmed	bens
36	Katerina balgurina	Katerina.balgurina@gmail.com	9173991247	11220	f	2016-06-21 16:36:30-04	ahmed	bens
39	Enyyella	enyyella@gmail.com	6463161568	10025	f	2016-06-21 17:47:34-04	ahmed	bens
41	Mahfuja Rahman	mahfuja95s@gmail.com	917-294-0158	11372	f	2016-06-23 13:28:00-04	ahmed	bens
45	Mohammad FallahRad	electronic.mfr@gmail.com	5166419449	11021	f	2016-06-23 13:33:14-04	ahmed	bens
43	Pryanka Bawa	pryanka.bawa@gmail.com	6466758768	11104	f	2016-06-23 13:30:25-04	ahmed	bens
44	Chris Thomas	chrisnthomas28@aol.com	9178341987	11428	f	2016-06-23 13:32:01-04	ahmed	bens
47	Joe	jborrel00@gmail.com	845-705-8192	10033	f	2016-06-23 13:36:48-04	ahmed	bens
48	Shahzeel Farooqi	shazinator97@gmail.com	516-603-9051	11003	f	2016-06-23 13:39:20-04	ahmed	bens
50	Joan Gomez	gompaz.joan@gmail.com	9549079311	11581	f	2016-06-23 13:45:43-04	ahmed	bens
51	Jorge Pulido	lestad50@hotmail.com	3476843609	10031	f	2016-06-23 13:47:19-04	ahmed	bens
52	Mohammad Hasani	mhasani000@citymail.cuny.edu	6467249812	10031	f	2016-06-23 13:48:24-04	ahmed	bens
87	joyce szeto	674947551@qq.com		11229	t	2016-06-25 21:24:09.264809-04	ahmed	bens
88	yongfu	yongfu2015@gmail.com		11373	t	2016-06-25 22:19:38.210591-04	ahmed	bens
89	qingtian chen	chenqingtian@gmail.com		11355	t	2016-06-26 13:34:55.410653-04	ahmed	bens
90	vivian	xiuyanchen22@gmail.com	3475421218	11373	f	2016-06-26 13:53:31.683831-04	ahmed	bens
91	ross wang	wangmih803@gmail.com		11373	f	2016-06-26 14:06:04.479239-04	ahmed	bens
8	Devin Voorsanger 	devin.voorsanger@gmail.com	7184070903	11206	f	2016-05-08 19:27:07-04	ahmed	bens
92	shenghuayou	shenghuayou@gmail.com		10451	f	2016-06-26 14:14:45.265102-04	ahmed	bens
93	xue wei fan	josephfxw@hotmail.com		10012	t	2016-06-26 14:37:29.477265-04	ahmed	bens
94	yihao song	tssongyihao@gmail.com		10001	f	2016-06-26 16:33:11.851744-04	ahmed	bens
95	paul rojas	paul8r@gmail.com	9178542314	11368	t	2016-06-26 17:44:08.286448-04	ahmed	bens
96	tahmid	tchowdh07@citymail.cuny.edu		10472	t	2016-06-26 23:47:08.849034-04	ahmed	bens
97	khalid jamal	khalidinho90@yahoo.com		11379	t	2016-06-27 10:48:27.824639-04	ahmed	bens
98	fady mekhael	fady.mekhael@gmail.com		11201	t	2016-06-27 10:49:49.521477-04	ahmed	bens
99	elizabeta pepkolaj	beta.pepkolaj@outlook.com		11103	t	2016-06-27 10:50:46.209315-04	ahmed	bens
100	hend yahya	hendyahya5@gmail.com		11103	t	2016-06-27 10:51:30.622525-04	ahmed	bens
101	beery taha	beerytahaa@gmail.com		11037	t	2016-06-27 10:52:09.292256-04	ahmed	bens
102	yasmina amine	yassamin08@menara.ma	Na	07043	t	2016-06-27 13:00:47.30435-04	ahmed	bens
103	charles ng	charlesng0@yahoo.com		10462	f	2016-06-27 17:08:50.666485-04	ahmed	bens
104	\N	kojnr@yahoo.com		10035	t	2016-08-05 12:23:28.320871-04	Kingsley 	Obi
\.


--
-- Name: beta_tester_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('beta_tester_id_seq', 104, true);


--
-- Data for Name: cars_make; Type: TABLE DATA; Schema: public; Owner: django
--

COPY cars_make (id, name, "niceName") FROM stdin;
\.


--
-- Name: cars_make_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('cars_make_id_seq', 1, false);


--
-- Data for Name: cars_model; Type: TABLE DATA; Schema: public; Owner: django
--

COPY cars_model (id, name, "niceName", years, make_id) FROM stdin;
\.


--
-- Name: cars_model_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('cars_model_id_seq', 1, false);


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: django
--

COPY django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2016-06-19 15:35:23.463103-04	1	Service object	1		9	1
2	2016-06-19 15:36:00.240698-04	2	Service object	1		9	1
3	2016-06-19 15:36:14.153296-04	3	Service object	1		9	1
4	2016-06-19 15:37:00.082597-04	1	aly, brake change	1		10	1
5	2016-06-19 15:37:55.978103-04	2	smith, brake change	1		10	1
6	2016-06-19 15:38:24.001842-04	3	yel, glass change	1		10	1
7	2016-06-19 15:39:48.213101-04	4	gates, glass change	1		10	1
8	2016-06-19 15:40:14.046957-04	5	aly, brake change	1		10	1
9	2016-06-25 04:06:53.317376-04	1	Testing	3		11	1
10	2016-06-25 04:07:02.817706-04	2	aa	1		11	1
11	2016-06-25 13:40:18.164456-04	2	aa	3		11	1
12	2016-06-26 14:08:48.626465-04	8	Devin Voorsanger 	2	Changed car.	11	1
13	2016-06-26 14:09:14.256785-04	13	Robin Li	2	Changed car.	11	1
14	2016-06-26 14:09:27.425651-04	14	Adriam Perez	2	Changed car.	11	1
15	2016-06-26 14:09:43.090649-04	16	marie nazon	2	Changed car.	11	1
16	2016-06-26 14:09:54.657243-04	18	renjie yin	2	Changed car.	11	1
17	2016-06-26 14:10:23.914929-04	20	Sebastian Villarrubia	2	Changed car.	11	1
18	2016-06-26 14:10:35.630501-04	23	Amali	2	Changed car.	11	1
19	2016-06-26 14:10:53.251116-04	31	Jackson Gable	2	Changed car.	11	1
20	2016-06-26 14:11:02.981485-04	3	Ameera	2	Changed car.	11	1
21	2016-06-26 14:11:16.067364-04	36	Katerina balgurina	2	Changed car.	11	1
22	2016-06-26 14:11:24.824757-04	39	Enyyella	2	Changed car.	11	1
23	2016-06-26 14:12:08.13042-04	41	Mahfuja Rahman	2	Changed car.	11	1
24	2016-06-26 14:12:46.060722-04	45	Mohammad FallahRad	2	Changed car.	11	1
25	2016-06-26 14:13:17.921685-04	43	Pryanka Bawa	2	Changed car.	11	1
26	2016-06-26 14:13:25.953476-04	44	Chris Thomas	2	Changed car.	11	1
27	2016-06-26 14:13:50.622536-04	47	Joe	2	Changed car.	11	1
28	2016-06-26 14:14:17.846542-04	48	Shahzeel Farooqi	2	Changed car.	11	1
29	2016-06-26 14:14:28.174469-04	50	Joan Gomez	2	Changed car.	11	1
30	2016-06-26 14:14:37.676754-04	51	Jorge Pulido	2	Changed car.	11	1
31	2016-06-26 14:14:54.847228-04	52	Mohammad Hasani	2	Changed car.	11	1
32	2016-06-26 17:53:38.035994-04	14	a@a.com	3		7	1
33	2016-06-26 17:53:38.040335-04	19	abc@abc.com	3		7	1
34	2016-06-26 17:53:38.042396-04	17	test@example.com	3		7	1
\.


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('django_admin_log_id_seq', 34, true);


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: django
--

COPY django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	contenttypes	contenttype
5	sessions	session
6	sites	site
7	users	user
8	users	mechanic
9	requests	service
10	requests	request
11	beta	tester
12	cars	make
13	cars	model
14	beta	betamechanic
15	beta	newsletter
16	beta	hiringjob
\.


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('django_content_type_id_seq', 16, true);


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: django
--

COPY django_migrations (id, app, name, applied) FROM stdin;
1	users	0001_initial	2016-06-19 15:30:27.808014-04
2	contenttypes	0001_initial	2016-06-19 15:30:27.824735-04
3	admin	0001_initial	2016-06-19 15:30:27.851481-04
4	contenttypes	0002_remove_content_type_name	2016-06-19 15:30:27.897533-04
5	auth	0001_initial	2016-06-19 15:30:27.982165-04
6	auth	0002_alter_permission_name_max_length	2016-06-19 15:30:28.002761-04
7	auth	0003_alter_user_email_max_length	2016-06-19 15:30:28.023518-04
8	auth	0004_alter_user_username_opts	2016-06-19 15:30:28.045309-04
9	auth	0005_alter_user_last_login_null	2016-06-19 15:30:28.109222-04
10	auth	0006_require_contenttypes_0002	2016-06-19 15:30:28.11167-04
11	requests	0001_initial	2016-06-19 15:30:28.185982-04
12	sessions	0001_initial	2016-06-19 15:30:28.208449-04
13	sites	0001_initial	2016-06-19 15:30:28.221497-04
14	beta	0001_initial	2016-06-25 02:19:58.344274-04
15	requests	0002_auto_20160625_0119	2016-06-25 02:19:58.48068-04
16	cars	0001_initial	2016-07-17 21:35:36.673907-04
17	requests	0002_auto_20160704_0141	2016-07-17 21:35:36.786912-04
18	requests	0003_service_price	2016-07-17 21:35:36.82005-04
19	requests	0004_auto_20160704_0151	2016-07-17 21:35:36.881724-04
20	beta	0002_betamechanic	2016-07-18 10:38:49.951299-04
21	beta	0003_auto_20160731_2053	2016-08-03 18:00:40.289505-04
22	beta	0004_newsletter	2016-08-03 18:00:40.307624-04
23	beta	0005_hiringjob	2016-08-03 18:00:40.320804-04
24	users	0002_auto_20160730_0159	2016-08-03 18:24:56.818986-04
25	users	0003_auto_20160803_1802	2016-08-03 18:24:56.929808-04
26	users	0004_auto_20160803_1814	2016-08-03 18:24:56.971311-04
\.


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('django_migrations_id_seq', 26, true);


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: django
--

COPY django_session (session_key, session_data, expire_date) FROM stdin;
6xisu0d7672o8suj7qujfonewccd20r0	ZDNjMDJjZmRkNjA3YjI5NjcwNmY2ZTQ1M2I2Y2U4ZGNmMDAxZWUyOTp7Il9hdXRoX3VzZXJfaGFzaCI6ImVjYmI0OGViMjE4ZjBjMzQ1MDU2N2Q5ZTJiMTAwNjIxODEwOTAzMmYiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=	2016-07-03 15:56:09.817891-04
yym0ipfvlk0efkya1qh96xdk4kaz8u3r	ZDNjMDJjZmRkNjA3YjI5NjcwNmY2ZTQ1M2I2Y2U4ZGNmMDAxZWUyOTp7Il9hdXRoX3VzZXJfaGFzaCI6ImVjYmI0OGViMjE4ZjBjMzQ1MDU2N2Q5ZTJiMTAwNjIxODEwOTAzMmYiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=	2016-07-03 19:06:58.132139-04
lpbrjwf5hmu1zni5oyja1fm7win38rkw	YzMzZWQzYjdlYjQ0OWU2MjAxZmM3MDIyOWI4ODE3MTE1MGM3ZGFiMjp7Il9hdXRoX3VzZXJfaGFzaCI6ImVjYmI0OGViMjE4ZjBjMzQ1MDU2N2Q5ZTJiMTAwNjIxODEwOTAzMmYiLCJfYXV0aF91c2VyX2lkIjoiMSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=	2016-07-04 08:37:40.274077-04
1yv1aab87f23mzm433qjxaboyph9kcrc	ZDNjMDJjZmRkNjA3YjI5NjcwNmY2ZTQ1M2I2Y2U4ZGNmMDAxZWUyOTp7Il9hdXRoX3VzZXJfaGFzaCI6ImVjYmI0OGViMjE4ZjBjMzQ1MDU2N2Q5ZTJiMTAwNjIxODEwOTAzMmYiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=	2016-07-04 13:04:43.801487-04
h3sb7vfikym68l5qj8wmub29f0qifalw	ZDNjMDJjZmRkNjA3YjI5NjcwNmY2ZTQ1M2I2Y2U4ZGNmMDAxZWUyOTp7Il9hdXRoX3VzZXJfaGFzaCI6ImVjYmI0OGViMjE4ZjBjMzQ1MDU2N2Q5ZTJiMTAwNjIxODEwOTAzMmYiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=	2016-07-10 16:29:01.861654-04
yzoafvaqui42c9n8os9jss3wjhz5rkq8	YzEyZWRiZTAyNmViMmY1NjJmMDRiODM5ZDE5NDAzMzgwZjU5NWY5MDp7Il9hdXRoX3VzZXJfaGFzaCI6IjRmZjBjMWFkOWYzNTZiY2ExMWIyOGU2ZTg0M2I0OGM3MzVmOTRmYmUiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIyIn0=	2016-08-13 21:04:45.09047-04
\.


--
-- Data for Name: django_site; Type: TABLE DATA; Schema: public; Owner: django
--

COPY django_site (id, domain, name) FROM stdin;
1	example.com	example.com
\.


--
-- Name: django_site_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('django_site_id_seq', 1, true);


--
-- Data for Name: users_user; Type: TABLE DATA; Schema: public; Owner: django
--

COPY users_user (id, password, last_login, username, email, first_name, last_name, is_mechanic, is_active, is_admin, date_joined, phone) FROM stdin;
1	pbkdf2_sha256$20000$2VoUy3OwgMhW$byddX5Dxf735hYUUUJPl1jB62yKJWGa32hXE8FFjuJI=	2016-06-26 16:29:01.858005-04	admin	admin@gmail.com	\N	\N	f	t	t	2016-06-18 18:46:51.281-04	3462341112
\.


--
-- Name: users_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django
--

SELECT pg_catalog.setval('users_user_id_seq', 19, true);


--
-- Name: auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions_group_id_permission_id_key; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_key UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission_content_type_id_codename_key; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_key UNIQUE (content_type_id, codename);


--
-- Name: auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: beta_betamechanic_email_key; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY beta_betamechanic
    ADD CONSTRAINT beta_betamechanic_email_key UNIQUE (email);


--
-- Name: beta_betamechanic_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY beta_betamechanic
    ADD CONSTRAINT beta_betamechanic_pkey PRIMARY KEY (id);


--
-- Name: beta_hiringjob_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY beta_hiringjob
    ADD CONSTRAINT beta_hiringjob_pkey PRIMARY KEY (id);


--
-- Name: beta_newsletter_email_key; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY beta_newsletter
    ADD CONSTRAINT beta_newsletter_email_key UNIQUE (email);


--
-- Name: beta_newsletter_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY beta_newsletter
    ADD CONSTRAINT beta_newsletter_pkey PRIMARY KEY (id);


--
-- Name: beta_tester_email_key; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY beta_tester
    ADD CONSTRAINT beta_tester_email_key UNIQUE (email);


--
-- Name: beta_tester_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY beta_tester
    ADD CONSTRAINT beta_tester_pkey PRIMARY KEY (id);


--
-- Name: cars_make_name_key; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY cars_make
    ADD CONSTRAINT cars_make_name_key UNIQUE (name);


--
-- Name: cars_make_niceName_key; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY cars_make
    ADD CONSTRAINT "cars_make_niceName_key" UNIQUE ("niceName");


--
-- Name: cars_make_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY cars_make
    ADD CONSTRAINT cars_make_pkey PRIMARY KEY (id);


--
-- Name: cars_model_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY cars_model
    ADD CONSTRAINT cars_model_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type_app_label_45f3b1d93ec8c61c_uniq; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY django_content_type
    ADD CONSTRAINT django_content_type_app_label_45f3b1d93ec8c61c_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: django_site_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY django_site
    ADD CONSTRAINT django_site_pkey PRIMARY KEY (id);


--
-- Name: users_user_email_key; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY users_user
    ADD CONSTRAINT users_user_email_key UNIQUE (email);


--
-- Name: users_user_phone_a98f5a5cff4b204_uniq; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY users_user
    ADD CONSTRAINT users_user_phone_a98f5a5cff4b204_uniq UNIQUE (phone);


--
-- Name: users_user_pkey; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY users_user
    ADD CONSTRAINT users_user_pkey PRIMARY KEY (id);


--
-- Name: users_user_username_key; Type: CONSTRAINT; Schema: public; Owner: django; Tablespace: 
--

ALTER TABLE ONLY users_user
    ADD CONSTRAINT users_user_username_key UNIQUE (username);


--
-- Name: auth_group_name_253ae2a6331666e8_like; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX auth_group_name_253ae2a6331666e8_like ON auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_0e939a4f; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX auth_group_permissions_0e939a4f ON auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_8373b171; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX auth_group_permissions_8373b171 ON auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_417f1b1c; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX auth_permission_417f1b1c ON auth_permission USING btree (content_type_id);


--
-- Name: beta_betamechanic_email_21e84c5ee8c912f8_like; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX beta_betamechanic_email_21e84c5ee8c912f8_like ON beta_betamechanic USING btree (email varchar_pattern_ops);


--
-- Name: beta_newsletter_email_58daf428a8ad4e09_like; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX beta_newsletter_email_58daf428a8ad4e09_like ON beta_newsletter USING btree (email varchar_pattern_ops);


--
-- Name: beta_tester_email_563d351c479dcff_like; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX beta_tester_email_563d351c479dcff_like ON beta_tester USING btree (email varchar_pattern_ops);


--
-- Name: cars_make_name_5e07ab243e2acb45_like; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX cars_make_name_5e07ab243e2acb45_like ON cars_make USING btree (name varchar_pattern_ops);


--
-- Name: cars_make_niceName_12ece055735f76f2_like; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX "cars_make_niceName_12ece055735f76f2_like" ON cars_make USING btree ("niceName" varchar_pattern_ops);


--
-- Name: cars_model_14dd5396; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX cars_model_14dd5396 ON cars_model USING btree (make_id);


--
-- Name: django_admin_log_417f1b1c; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX django_admin_log_417f1b1c ON django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_e8701ad4; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX django_admin_log_e8701ad4 ON django_admin_log USING btree (user_id);


--
-- Name: django_session_de54fa62; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX django_session_de54fa62 ON django_session USING btree (expire_date);


--
-- Name: django_session_session_key_461cfeaa630ca218_like; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX django_session_session_key_461cfeaa630ca218_like ON django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: users_user_email_3b3802f158c4a690_like; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX users_user_email_3b3802f158c4a690_like ON users_user USING btree (email varchar_pattern_ops);


--
-- Name: users_user_username_4c640ec321317c71_like; Type: INDEX; Schema: public; Owner: django; Tablespace: 
--

CREATE INDEX users_user_username_4c640ec321317c71_like ON users_user USING btree (username varchar_pattern_ops);


--
-- Name: auth_content_type_id_508cf46651277a81_fk_django_content_type_id; Type: FK CONSTRAINT; Schema: public; Owner: django
--

ALTER TABLE ONLY auth_permission
    ADD CONSTRAINT auth_content_type_id_508cf46651277a81_fk_django_content_type_id FOREIGN KEY (content_type_id) REFERENCES django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissio_group_id_689710a9a73b7457_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: django
--

ALTER TABLE ONLY auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_group_id_689710a9a73b7457_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permission_id_1f49ccbbdc69d2fc_fk_auth_permission_id; Type: FK CONSTRAINT; Schema: public; Owner: django
--

ALTER TABLE ONLY auth_group_permissions
    ADD CONSTRAINT auth_group_permission_id_1f49ccbbdc69d2fc_fk_auth_permission_id FOREIGN KEY (permission_id) REFERENCES auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cars_model_make_id_205e942bd072ec11_fk_cars_make_id; Type: FK CONSTRAINT; Schema: public; Owner: django
--

ALTER TABLE ONLY cars_model
    ADD CONSTRAINT cars_model_make_id_205e942bd072ec11_fk_cars_make_id FOREIGN KEY (make_id) REFERENCES cars_make(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: djan_content_type_id_697914295151027a_fk_django_content_type_id; Type: FK CONSTRAINT; Schema: public; Owner: django
--

ALTER TABLE ONLY django_admin_log
    ADD CONSTRAINT djan_content_type_id_697914295151027a_fk_django_content_type_id FOREIGN KEY (content_type_id) REFERENCES django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log_user_id_52fdd58701c5f563_fk_users_user_id; Type: FK CONSTRAINT; Schema: public; Owner: django
--

ALTER TABLE ONLY django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_52fdd58701c5f563_fk_users_user_id FOREIGN KEY (user_id) REFERENCES users_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

